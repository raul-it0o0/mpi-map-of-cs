@article{denning2000computer,
  title={Computer science: The discipline},
  author={Denning, Peter J},
  journal={Encyclopedia of computer science},
  volume={32},
  number={1},
  pages={9--23},
  year={2000},
  publisher={Nature Publishing Group London}
}

@book{tucker2004computer,
  title={Computer Science Handbook},
  author={Tucker, A.B.},
  isbn={9780203494455},
  year={2004},
  publisher={CRC Press}
}

@book{mall2018fundamentals,
  title={Fundamentals of Software Engineering, Fifth Edition},
  author={Mall, R.},
  isbn={9789388028035},
  series={Eastern Economy Edition},
  url={https://books.google.com/books?id=-JNuDwAAQBAJ},
  year={2018},
  publisher={PHI Learning Private Limited}
}

@article{wong2021bibliometric,
  title={A bibliometric assessment of software engineering themes, scholars and institutions (2013--2020)},
  author={Wong, W Eric and Mittas, Nikolaos and Arvanitou, Elvira Maria and Li, Yihao},
  journal={Journal of Systems and Software},
  volume={180},
  pages={111029},
  year={2021},
  publisher={Elsevier}
}

@article{shaw2002makes,
  title={What makes good research in software engineering?},
  author={Shaw, Mary},
  journal={International Journal on Software Tools for Technology Transfer},
  volume={4},
  pages={1--7},
  year={2002},
  publisher={Springer}
}

@book{wohlin2012experimentation,
  title={Experimentation in Software Engineering},
  author={Wohlin, C. and Runeson, P. and H{\"o}st, M. and Ohlsson, M.C. and Regnell, B. and Wessl{\'e}n, A.},
  isbn={9783642290442},
  series={Computer Science},
  url={https://books.google.com/books?id=QPVsM1_U8nkC},
  year={2012},
  publisher={Springer Berlin Heidelberg}
}

@article{glass2002research,
  title={Research in software engineering: an analysis of the literature},
  author={Glass, Robert L. and Vessey, Iris and Ramesh, Venkataraman},
  journal={Information and Software technology},
  volume={44},
  number={8},
  pages={491--506},
  year={2002},
  publisher={Elsevier}
}

@article{glass1994software,
  title={The software-research crisis},
  author={Glass, Robert L},
  journal={IEEE Software},
  volume={11},
  number={6},
  pages={42--47},
  year={1994},
  publisher={IEEE}
}

@article{hannaysestematic,
author = {Hannay, Jo and Sjøberg, Dag and Dybå, Tore},
year = {2007},
month = {03},
pages = {87 - 107},
title = {A Systematic Review of Theory Use in Software Engineering Experiments},
volume = {33},
journal = {Software Engineering, IEEE Transactions on},
doi = {10.1109/TSE.2007.12}
}

@Inbook{Taylor2019,
author="Taylor, Richard N.",
editor="Cha, Sungdeok
and Taylor, Richard N.
and Kang, Kyochul",
title="Software Architecture and Design",
bookTitle="Handbook of Software Engineering",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="93--122",
abstract="The activity of designing is pervasive in software development. A software system's architecture is the set of principal design decisions made about the system. As such, architecture and design are central pillars of software engineering. This chapter provides a coherent set of definitions for architecture, highlights key techniques for designing, and illustrates their application in well-known, influential applications. The development of the central concepts is traced from early beginnings in both domain-specific and domain-independent contexts. Techniques for analysis of architectures are discussed, and particular emphasis is placed on the distinctive role that connectors play in complex systems. Cost-benefit trade-offs are examined, the importance of maintaining conceptual integrity is stressed, and future directions for the field are explored.",
isbn="978-3-030-00262-6",
doi="10.1007/978-3-030-00262-6_3",
url="https://doi.org/10.1007/978-3-030-00262-6_3"
}

@misc{ibmWhatSoftware,
	author = {},
	title = {{W}hat {I}s {S}oftware {D}evelopment?},
	howpublished = {\url{https://www.ibm.com/topics/software-development}},
	year = {},
}

@misc{wikiversityUnsolvedProblems,
	author = {},
	title = {{U}nsolved problems in software engineering},
	howpublished = {\url{https://en.wikiversity.org/wiki/Unsolved_problems_in_software_engineering}},
	year = {},
}

@article{PACHOULY2022104773,
title = {A systematic literature review on software defect prediction using artificial intelligence: Datasets, Data Validation Methods, Approaches, and Tools},
journal = {Engineering Applications of Artificial Intelligence},
volume = {111},
pages = {104773},
year = {2022},
issn = {0952-1976},
doi = {https://doi.org/10.1016/j.engappai.2022.104773},
url = {https://www.sciencedirect.com/science/article/pii/S0952197622000616},
author = {Jalaj Pachouly and Swati Ahirrao and Ketan Kotecha and Ganeshsree Selvachandran and Ajith Abraham},
keywords = {Software defect prediction, Classification, Artificial intelligence, Machine learning},
abstract = {Delivering high-quality software products is a challenging task. It needs proper coordination from various teams in planning, execution, and testing. Many software products have high numbers of defects revealed in a production environment. Software failures are costly regarding money, time, and reputation for a business and even life-threatening if utilized in critical applications. Identifying and fixing software defects in the production system is costly, which could be a trivial task if detected before shipping the product. Binary classification is commonly used in existing software defect prediction studies. With the advancements in Artificial Intelligence techniques, there is a great potential to provide meaningful information to software development teams for producing quality software products. An extensive survey for Software Defect Prediction is necessary for exploring datasets, data validation methods, defect detection, and prediction approaches and tools. The survey infers standard datasets utilized in early studies lack adequate features and data validation techniques. According to the finding of the literature survey, the standard datasets has few labels, resulting in insufficient details regarding defects. Systematic Literature Reviews (SLR) on Software Defect Prediction are limited. Hence this SLR presents a comprehensive analysis of defect datasets, dataset validation, detection, prediction approaches, and tools for Software Defect Prediction. The survey exhibits the futuristic recommendations that will allow researchers to develop a tool for Software Defect Prediction. The survey introduces the architecture for developing a software prediction dataset with adequate features and statistical data validation techniques for multi-label classification for software defects.}
}

@misc{linkedinTestingUnsolvedProblem,
	author = {},
	title = {{T}esting is an {U}nsolved {P}roblem},
	howpublished = {\url{https://www.linkedin.com/pulse/testing-unsolvedproblem-jason-arbon/}},
	year = {},
}

@book{broy2012software,
  title={Software Pioneers: Contributions to Software Engineering},
  author={Broy, M. and Denert, E.},
  isbn={9783642594120},
  url={https://books.google.com/books?id=Sr-qCAAAQBAJ},
  year={2012},
  publisher={Springer}
}

@book{swebokv3,
author = {Bourque, Pierre and Fairley, R.E.},
title = {Guide to the Software Engineering Body of Knowledge - SWEBOK (version 3.0)},
year = {2014},
url = {www.swebok.org},
publisher = {IEEE Press}
}
